name: Build and Publish to APT

on:
  push:
    branches:
    - release/**

# Notes about adding versions:
# - Add to both build-source-package and build-binary-package
# - Adding to build-binary-packages may need exceptions, especially for
#   Ubuntu releases that don't support i386
# - Add new versions first, so --fail-if-exists will fail after uploading
#   them.

jobs:
  build-source-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dist: [jammy, bullseye, impish, xenial, bionic, focal, hirsute, stretch, buster]
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
          sudo apt-get update && \
          sudo apt-get install \
            debhelper dput tcl-tls libsystemd-dev pkg-config
    - name: Determine version
      run: |
          VERSION=7.0.0
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
    - name: Get source tarball
      run: |
          curl --silent -L "https://github.com/redis/redis/archive/unstable.tar.gz" -o redis_unstable.orig.tar.gz
          tar vxfz redis_unstable.orig.tar.gz
          mv redis-unstable redis-7.0.0
          tar cvfz redis_7.0.0.orig.tar.gz redis-7.0.0
    - name: Build source package
      run: |
          cp -pr debian redis-${VERSION}
          sed -i "s/@RELEASE@/${{ matrix.dist }}/g" redis-${VERSION}/debian/changelog
          ( cd redis-${VERSION} && dpkg-buildpackage -S )
    - name: Upload source package artifact
      uses: actions/upload-artifact@v2
      with:
        name: source-${{ matrix.dist }}
        path: |
            *.debian.tar.*
            *.dsc
            redis_*.orig.tar.gz

  build-binary-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dist: [jammy, bullseye, impish, xenial, bionic, focal, hirsute, stretch, buster]
        arch: [i386, amd64, arm64, armhf]
        exclude:
        - dist: focal
          arch: i386
        - dist: jammy
          arch: i386
        - dist: hirsute
          arch: i386
        - dist: impish
          arch: i386
    needs: build-source-package
    steps:
    - uses: actions/checkout@v2
    - name: Determine build architecture
      run: |
          if [ ${{ matrix.arch }} = "i386" ]; then
              BUILD_ARCH=i386
          else
              BUILD_ARCH=amd64
          fi
          echo "BUILD_ARCH=${BUILD_ARCH}" >> $GITHUB_ENV
    - name: Setup APT Signing key
      run: |
          mkdir -m 0700 -p ~/.gnupg
          echo "$APT_SIGNING_KEY" | gpg --import
      env:
        APT_SIGNING_KEY: ${{ secrets.APT_SIGNING_KEY }}
    - name: Install dependencies
      run: |
          sudo apt-get update && \
          sudo apt-get install \
            sbuild debhelper
          sudo sbuild-adduser $USER
    - name: Prepare sbuild environment
      run: sudo ./setup_sbuild.sh ${{ matrix.dist }} ${{ env.BUILD_ARCH }}
    - name: Get source package
      uses: actions/download-artifact@v2
      with:
        name: source-${{ matrix.dist }}
    - name: Build binary package
      run: |
          sudo sbuild \
            --nolog \
            --host ${{ matrix.arch }} \
            --build ${{ env.BUILD_ARCH }} \
            --dist ${{ matrix.dist }} *.dsc
    - name: Upload binary package artifact
      uses: actions/upload-artifact@v2
      with:
        name: binary-${{ matrix.dist }}-${{ matrix.arch }}
        path: |
          *.deb

  smoke-test-packages:
    runs-on: ubuntu-latest
    needs: build-binary-package
    env:
      ARCH: amd64
    strategy:
      matrix:
        image: ["debian:buster", "debian:bullseye", "ubuntu:jammy", "ubuntu:focal", "ubuntu:bionic"]
    container: ${{ matrix.image }}
    steps:
    - name: Get binary packages
      uses: actions/download-artifact@v2
    - name: Install packages
      run: |
        apt-get update
        cd binary-$(echo ${{ matrix.image }} | cut -d: -f2)-${{ env.ARCH }} && apt install --yes ./*.deb
    - name: Run redis-server smoke test
      run: |
        service redis-server start
        redis-benchmark -P 10
    - name: Run redis-sentinel smoke test
      run: |
        service redis-sentinel start
        echo ping | redis-cli -p 26379
